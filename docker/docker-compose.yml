version: "3.9"

x-restart-policy: &restart_policy
  restart: unless-stopped

x-project-defaults: &project_defaults
  <<: *restart_policy
  networks:
    - annotation_nw
  env_file: .env

services:
  traefik:
    <<: *project_defaults
    image: ${TRAEFIK_IMAGE-traefik:v2.6}
    depends_on:
      frontend:
        condition: service_healthy
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro

  api:
    <<: *project_defaults
    image: ${API_IMAGE-registry.gitlab.com/natural-solutions/geonature/annotation:api-dev}
    build:
      context: ../api
      dockerfile: Dockerfile
      target: development
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/openapi.json"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 20s
    depends_on:
      db:
        condition: service_healthy
      minio:
        condition: service_healthy
    labels:
      - traefik.enable=true
      - traefik.http.routers.api.rule=${TRAEFIK_ROUTER_RULE_API-PathPrefix(`/api/v1`)}
      - traefik.http.routers.api.entrypoints=web
      - traefik.http.routers.api.middlewares=api-stripprefix
      - traefik.http.middlewares.api-stripprefix.stripprefix.prefixes=${API_ROOT_PATH-/api/v1}

  frontend:
    <<: *project_defaults
    image: ${FRONTEND_IMAGE-registry.gitlab.com/natural-solutions/geonature/annotation:frontend-dev}
    build:
      context: ../frontend
      dockerfile: Dockerfile
    depends_on:
      api:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s
    labels:
      - traefik.enable=true
      - traefik.http.routers.frontend.rule=${TRAEFIK_ROUTER_RULE_FRONTEND-PathPrefix(`/`)}
      - traefik.http.routers.frontend.entrypoints=web
    environment:
      - REACT_APP_KEYCLOAK_CLIENT_URL=${KEYCLOAK_CLIENT_URL:-http://localhost:8888/auth}
      - REACT_APP_KEYCLOAK_CLIENT_REALM=${KEYCLOAK_REALM_ID:-geonature-annotation}
      - REACT_APP_KEYCLOAK_CLIENT_CLIENT_ID=${KEYCLOAK_CLIENT_CLIENT_ID:-frontend}

  db:
    <<: *project_defaults
    image: postgres:14-alpine
    healthcheck:      
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER-dbuser} -d ${DB_NAME-annotation} -h 127.0.0.1"]     
      interval: 10s      
      timeout: 5s      
      retries: 3      
      start_period: 60s
    volumes:
      - db_data:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD-dbpassword}
      POSTGRES_DB: ${DB_NAME-annotation}      
      POSTGRES_USER: ${DB_USER-dbuser}

  keycloak:
    <<: *project_defaults
    image: ${KEYCLOAK_IMAGE}
    command: start-dev --spi-login-protocol-openid-connect-legacy-logout-redirect-uri=true --import-realm
    labels:
      - traefik.enable=true
      - traefik.http.routers.keycloak.rule=${KEYCLOAK_TRAEFIK_RULE-PathPrefix(`/auth`)}
      - traefik.http.routers.keycloak.entrypoints=web
    volumes:
      - ./keycloak/realm.json:/opt/keycloak/data/import/realm.json

  minio:
    <<: *project_defaults
    image: minio/minio
    volumes:
      - minio_data:/data
    healthcheck:      
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]      
      interval: 30s      
      timeout: 20s      
      retries: 3
    command: server --console-address :9001 /data

volumes:
  db_data:
  minio_data:

networks:
  annotation_nw:
    external: false